"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/zod-form-data";
exports.ids = ["vendor-chunks/zod-form-data"];
exports.modules = {

/***/ "(ssr)/./node_modules/zod-form-data/dist/index.mjs":
/*!***************************************************!*\
  !*** ./node_modules/zod-form-data/dist/index.mjs ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkbox: () => (/* binding */ checkbox),\n/* harmony export */   file: () => (/* binding */ file),\n/* harmony export */   formData: () => (/* binding */ formData),\n/* harmony export */   json: () => (/* binding */ json),\n/* harmony export */   numeric: () => (/* binding */ numeric),\n/* harmony export */   preprocessFormData: () => (/* binding */ preprocessFormData),\n/* harmony export */   repeatable: () => (/* binding */ repeatable),\n/* harmony export */   repeatableOfType: () => (/* binding */ repeatableOfType),\n/* harmony export */   text: () => (/* binding */ text),\n/* harmony export */   zfd: () => (/* binding */ helpers_exports)\n/* harmony export */ });\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zod */ \"(ssr)/./node_modules/zod/lib/index.mjs\");\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __commonJS = (cb, mod) => function __require() {\n  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\n\n// ../../node_modules/lodash.get/index.js\nvar require_lodash = __commonJS({\n  \"../../node_modules/lodash.get/index.js\"(exports, module) {\n    var FUNC_ERROR_TEXT = \"Expected a function\";\n    var HASH_UNDEFINED = \"__lodash_hash_undefined__\";\n    var INFINITY = 1 / 0;\n    var funcTag = \"[object Function]\";\n    var genTag = \"[object GeneratorFunction]\";\n    var symbolTag = \"[object Symbol]\";\n    var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/;\n    var reIsPlainProp = /^\\w*$/;\n    var reLeadingDot = /^\\./;\n    var rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n    var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n    var reEscapeChar = /\\\\(\\\\)?/g;\n    var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n    var freeGlobal = typeof global == \"object\" && global && global.Object === Object && global;\n    var freeSelf = typeof self == \"object\" && self && self.Object === Object && self;\n    var root = freeGlobal || freeSelf || Function(\"return this\")();\n    function getValue(object, key) {\n      return object == null ? void 0 : object[key];\n    }\n    function isHostObject(value) {\n      var result = false;\n      if (value != null && typeof value.toString != \"function\") {\n        try {\n          result = !!(value + \"\");\n        } catch (e) {\n        }\n      }\n      return result;\n    }\n    var arrayProto = Array.prototype;\n    var funcProto = Function.prototype;\n    var objectProto = Object.prototype;\n    var coreJsData = root[\"__core-js_shared__\"];\n    var maskSrcKey = function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || \"\");\n      return uid ? \"Symbol(src)_1.\" + uid : \"\";\n    }();\n    var funcToString = funcProto.toString;\n    var hasOwnProperty = objectProto.hasOwnProperty;\n    var objectToString = objectProto.toString;\n    var reIsNative = RegExp(\n      \"^\" + funcToString.call(hasOwnProperty).replace(reRegExpChar, \"\\\\$&\").replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, \"$1.*?\") + \"$\"\n    );\n    var Symbol2 = root.Symbol;\n    var splice = arrayProto.splice;\n    var Map2 = getNative(root, \"Map\");\n    var nativeCreate = getNative(Object, \"create\");\n    var symbolProto = Symbol2 ? Symbol2.prototype : void 0;\n    var symbolToString = symbolProto ? symbolProto.toString : void 0;\n    function Hash(entries2) {\n      var index = -1, length = entries2 ? entries2.length : 0;\n      this.clear();\n      while (++index < length) {\n        var entry = entries2[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n    }\n    function hashDelete(key) {\n      return this.has(key) && delete this.__data__[key];\n    }\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? void 0 : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : void 0;\n    }\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? data[key] !== void 0 : hasOwnProperty.call(data, key);\n    }\n    function hashSet(key, value) {\n      var data = this.__data__;\n      data[key] = nativeCreate && value === void 0 ? HASH_UNDEFINED : value;\n      return this;\n    }\n    Hash.prototype.clear = hashClear;\n    Hash.prototype[\"delete\"] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n    function ListCache(entries2) {\n      var index = -1, length = entries2 ? entries2.length : 0;\n      this.clear();\n      while (++index < length) {\n        var entry = entries2[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n    function listCacheClear() {\n      this.__data__ = [];\n    }\n    function listCacheDelete(key) {\n      var data = this.__data__, index = assocIndexOf(data, key);\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      return true;\n    }\n    function listCacheGet(key) {\n      var data = this.__data__, index = assocIndexOf(data, key);\n      return index < 0 ? void 0 : data[index][1];\n    }\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n    function listCacheSet(key, value) {\n      var data = this.__data__, index = assocIndexOf(data, key);\n      if (index < 0) {\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype[\"delete\"] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n    function MapCache(entries2) {\n      var index = -1, length = entries2 ? entries2.length : 0;\n      this.clear();\n      while (++index < length) {\n        var entry = entries2[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n    function mapCacheClear() {\n      this.__data__ = {\n        \"hash\": new Hash(),\n        \"map\": new (Map2 || ListCache)(),\n        \"string\": new Hash()\n      };\n    }\n    function mapCacheDelete(key) {\n      return getMapData(this, key)[\"delete\"](key);\n    }\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n    function mapCacheSet(key, value) {\n      getMapData(this, key).set(key, value);\n      return this;\n    }\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype[\"delete\"] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n    function baseGet(object, path) {\n      path = isKey(path, object) ? [path] : castPath(path);\n      var index = 0, length = path.length;\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return index && index == length ? object : void 0;\n    }\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) || isHostObject(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n    function baseToString(value) {\n      if (typeof value == \"string\") {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : \"\";\n      }\n      var result = value + \"\";\n      return result == \"0\" && 1 / value == -INFINITY ? \"-0\" : result;\n    }\n    function castPath(value) {\n      return isArray(value) ? value : stringToPath(value);\n    }\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key) ? data[typeof key == \"string\" ? \"string\" : \"hash\"] : data.map;\n    }\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : void 0;\n    }\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == \"number\" || type == \"symbol\" || type == \"boolean\" || value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);\n    }\n    function isKeyable(value) {\n      var type = typeof value;\n      return type == \"string\" || type == \"number\" || type == \"symbol\" || type == \"boolean\" ? value !== \"__proto__\" : value === null;\n    }\n    function isMasked(func) {\n      return !!maskSrcKey && maskSrcKey in func;\n    }\n    var stringToPath = memoize(function(string) {\n      string = toString(string);\n      var result = [];\n      if (reLeadingDot.test(string)) {\n        result.push(\"\");\n      }\n      string.replace(rePropName, function(match, number, quote, string2) {\n        result.push(quote ? string2.replace(reEscapeChar, \"$1\") : number || match);\n      });\n      return result;\n    });\n    function toKey(value) {\n      if (typeof value == \"string\" || isSymbol(value)) {\n        return value;\n      }\n      var result = value + \"\";\n      return result == \"0\" && 1 / value == -INFINITY ? \"-0\" : result;\n    }\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {\n        }\n        try {\n          return func + \"\";\n        } catch (e) {\n        }\n      }\n      return \"\";\n    }\n    function memoize(func, resolver) {\n      if (typeof func != \"function\" || resolver && typeof resolver != \"function\") {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments, key = resolver ? resolver.apply(this, args) : args[0], cache = memoized.cache;\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result);\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache)();\n      return memoized;\n    }\n    memoize.Cache = MapCache;\n    function eq(value, other) {\n      return value === other || value !== value && other !== other;\n    }\n    var isArray = Array.isArray;\n    function isFunction(value) {\n      var tag = isObject(value) ? objectToString.call(value) : \"\";\n      return tag == funcTag || tag == genTag;\n    }\n    function isObject(value) {\n      var type = typeof value;\n      return !!value && (type == \"object\" || type == \"function\");\n    }\n    function isObjectLike(value) {\n      return !!value && typeof value == \"object\";\n    }\n    function isSymbol(value) {\n      return typeof value == \"symbol\" || isObjectLike(value) && objectToString.call(value) == symbolTag;\n    }\n    function toString(value) {\n      return value == null ? \"\" : baseToString(value);\n    }\n    function get2(object, path, defaultValue) {\n      var result = object == null ? void 0 : baseGet(object, path);\n      return result === void 0 ? defaultValue : result;\n    }\n    module.exports = get2;\n  }\n});\n\n// src/helpers.ts\nvar helpers_exports = {};\n__export(helpers_exports, {\n  checkbox: () => checkbox,\n  file: () => file,\n  formData: () => formData,\n  json: () => json,\n  numeric: () => numeric,\n  preprocessFormData: () => preprocessFormData,\n  repeatable: () => repeatable,\n  repeatableOfType: () => repeatableOfType,\n  text: () => text\n});\n\n// ../set-get/src/stringToPathArray.ts\nvar stringToPathArray = (path) => {\n  if (path.length === 0)\n    return [];\n  const match = path.match(/^\\[(.+?)\\](.*)$/) || path.match(/^\\.?([^\\.\\[\\]]+)(.*)$/);\n  if (match) {\n    const [_, key, rest] = match;\n    return [/^\\d+$/.test(key) ? Number(key) : key, ...stringToPathArray(rest)];\n  }\n  return [path];\n};\n\n// ../set-get/src/setPath.ts\nfunction setPath(object, path, defaultValue) {\n  return _setPathNormalized(object, stringToPathArray(path), defaultValue);\n}\nfunction _setPathNormalized(object, path, value) {\n  var _a;\n  const leadingSegments = path.slice(0, -1);\n  const lastSegment = path[path.length - 1];\n  let obj = object;\n  for (let i = 0; i < leadingSegments.length; i++) {\n    const segment = leadingSegments[i];\n    if (obj[segment] === void 0) {\n      const nextSegment = (_a = leadingSegments[i + 1]) != null ? _a : lastSegment;\n      obj[segment] = typeof nextSegment === \"number\" ? [] : {};\n    }\n    obj = obj[segment];\n  }\n  obj[lastSegment] = value;\n  return object;\n}\n\n// ../set-get/src/getPath.ts\nvar import_lodash = __toESM(require_lodash());\n\n// src/helpers.ts\n\nvar stripEmpty = zod__WEBPACK_IMPORTED_MODULE_0__.z.literal(\"\").transform(() => void 0);\nvar preprocessIfValid = (schema) => (val) => {\n  const result = schema.safeParse(val);\n  if (result.success)\n    return result.data;\n  return val;\n};\nvar text = (schema = zod__WEBPACK_IMPORTED_MODULE_0__.z.string()) => zod__WEBPACK_IMPORTED_MODULE_0__.z.preprocess(preprocessIfValid(stripEmpty), schema);\nvar numeric = (schema = zod__WEBPACK_IMPORTED_MODULE_0__.z.number()) => zod__WEBPACK_IMPORTED_MODULE_0__.z.preprocess(\n  preprocessIfValid(\n    zod__WEBPACK_IMPORTED_MODULE_0__.z.union([\n      stripEmpty,\n      zod__WEBPACK_IMPORTED_MODULE_0__.z.string().transform((val) => Number(val)).refine((val) => !Number.isNaN(val))\n    ])\n  ),\n  schema\n);\nvar checkbox = ({ trueValue = \"on\" } = {}) => zod__WEBPACK_IMPORTED_MODULE_0__.z.union([\n  zod__WEBPACK_IMPORTED_MODULE_0__.z.literal(trueValue).transform(() => true),\n  zod__WEBPACK_IMPORTED_MODULE_0__.z.literal(void 0).transform(() => false)\n]);\nvar file = (schema = zod__WEBPACK_IMPORTED_MODULE_0__.z.instanceof(File)) => zod__WEBPACK_IMPORTED_MODULE_0__.z.preprocess((val) => {\n  return val instanceof File && val.size === 0 ? void 0 : val;\n}, schema);\nvar repeatable = (schema = zod__WEBPACK_IMPORTED_MODULE_0__.z.array(text())) => {\n  return zod__WEBPACK_IMPORTED_MODULE_0__.z.preprocess((val) => {\n    if (Array.isArray(val))\n      return val;\n    if (val === void 0)\n      return [];\n    return [val];\n  }, schema);\n};\nvar repeatableOfType = (schema) => repeatable(zod__WEBPACK_IMPORTED_MODULE_0__.z.array(schema));\nvar entries = zod__WEBPACK_IMPORTED_MODULE_0__.z.array(zod__WEBPACK_IMPORTED_MODULE_0__.z.tuple([zod__WEBPACK_IMPORTED_MODULE_0__.z.string(), zod__WEBPACK_IMPORTED_MODULE_0__.z.any()]));\nvar safeParseJson = (jsonString) => {\n  try {\n    return JSON.parse(jsonString);\n  } catch {\n    return jsonString;\n  }\n};\nvar json = (schema) => zod__WEBPACK_IMPORTED_MODULE_0__.z.preprocess(\n  preprocessIfValid(\n    zod__WEBPACK_IMPORTED_MODULE_0__.z.union([stripEmpty, zod__WEBPACK_IMPORTED_MODULE_0__.z.string().transform((val) => safeParseJson(val))])\n  ),\n  schema\n);\nvar processFormData = preprocessIfValid(\n  zod__WEBPACK_IMPORTED_MODULE_0__.z.any().refine((val) => Symbol.iterator in val).transform((val) => [...val]).refine(\n    (val) => entries.safeParse(val).success\n  ).transform((data) => {\n    const map = /* @__PURE__ */ new Map();\n    for (const [key, value] of data) {\n      if (map.has(key)) {\n        map.get(key).push(value);\n      } else {\n        map.set(key, [value]);\n      }\n    }\n    return [...map.entries()].reduce((acc, [key, value]) => {\n      return setPath(acc, key, value.length === 1 ? value[0] : value);\n    }, {});\n  })\n);\nvar preprocessFormData = processFormData;\nvar formData = (shapeOrSchema) => zod__WEBPACK_IMPORTED_MODULE_0__.z.preprocess(\n  processFormData,\n  shapeOrSchema instanceof zod__WEBPACK_IMPORTED_MODULE_0__.ZodType ? shapeOrSchema : zod__WEBPACK_IMPORTED_MODULE_0__.z.object(shapeOrSchema)\n);\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/zod-form-data/dist/index.mjs\n");

/***/ })

};
;