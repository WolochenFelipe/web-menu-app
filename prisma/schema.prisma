generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

model User {
  id      String @id @default(cuid())
  kindeId String @unique
  email   String
  name    String

  menu       Menu[]
  Preference Preference[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Menu {
  id         String     @id @default(cuid())
  subdomain  String     @unique
  name       String
  image      String
  categories Category[]
  userId     String
  User       User       @relation(fields: [userId], references: [id])

  Preference Preference[]
  Products   Product[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id          String    @id @default(cuid())
  name        String
  description String
  icon        String?
  products    Product[]
  menuId      String
  Menu        Menu      @relation(fields: [menuId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id               String       @id @default(cuid())
  name             String
  description      String
  notices          String
  image            String
  price            Int
  nutricionalTable String
  tags             TagProduct[]

  categoryId String
  category   Category @relation(fields: [categoryId], references: [id])
  menuId     String
  Menu       Menu     @relation(fields: [menuId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Tag {
  id       String       @id @default(cuid())
  name     String
  products TagProduct[]

  createdAt DateTime @default(now())
}

model TagProduct {
  productId String
  product   Product @relation(fields: [productId], references: [id])
  tagId     String
  tag       Tag     @relation(fields: [tagId], references: [id])

  @@id([productId, tagId])
}

model Preference {
  id             String  @id @default(cuid())
  menuId         String
  userId         String?
  backgroundMode String
  image          String
  accentColor    String

  Menu Menu  @relation(fields: [menuId], references: [id])
  user User? @relation(fields: [userId], references: [id])
}
